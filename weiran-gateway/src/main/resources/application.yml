# 端口
server:
  port: 8205

spring:
  application:
    name: weiran-gateway
  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848 #配置Nacos地址 ,暂且只配置服务发现管理，配置管理暂且没有弄
    gateway:
      #全局fallback
      default-filters:
        - name: Hystrix
          args:
            name: defaultFallback
            fallbackUri: forward:/defaultFallback
      # 路由（routes：路由，它由唯一标识（ID）、目标服务地址（uri）、一组断言（predicates）和一组过滤器组成（filters）。filters 不是必需参数。）
      routes:
        # 当前路由的标识，唯一
        - id: weiran-uaa
          # lb指的是负载均衡，后面是具体微服务在nacos中的标识
          uri: lb://weiran-uaa
          # 断言（条件判断，返回之时boolean，转发请求要满足的条件）
          predicates:
            - Path=/uaa/**
          # 过滤器（在请求传递的过程中，对请求做一些事）
          filters:
            # 在请求转发之前去掉一层路径
            - StripPrefix=1

        - id: weiran-mission
          uri: lb://weiran-mission
          predicates:
            - Path=/mission/**
          filters:
            - StripPrefix=1

    discovery:
      locator:
        enabled: true #开启从注册中心动态创建路由的功能
        lower-case-service-id: true #使用小写服务名，默认是大写

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/auth?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&serverTimezone=GMT%2B8&useSSL=false&allowPublicKeyRetrieval=true&autoReconnect=true&failOverReadOnly=false
    username: root
    password: 123456
  # redis Sa-token的框架集成，只需要引入maven依赖就可以了
  redis:
    # Redis数据库索引（默认为0）
    database: 0
    # Redis服务器地址
    host: 127.0.0.1
    # Redis服务器连接端口
    port: 6379
    # Redis服务器连接密码（默认为空）
    password: 123456
    # 连接超时时间（毫秒）
    timeout: 5000
    lettuce:
      pool:
        # 连接池最大连接数
        max-active: 200
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1ms
        # 连接池中的最大空闲连接
        max-idle: 10
        # 连接池中的最小空闲连接
        min-idle: 0

# sa-token配置
sa-token:
  # token名称 (同时也是cookie名称)
  token-name: satoken
  # token有效期，单位s 默认30天, -1代表永不过期
  timeout: 60
  # token临时有效期 (指定时间内无操作就视为token过期) 单位: 秒
  activity-timeout: 60
  # 是否允许同一账号并发登录 (为true时允许一起登录, 为false时新登录挤掉旧登录)
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token)
  is-share: true
  # token风格
  token-style: uuid
  # 是否输出操作日志
  is-log: false

# 这个与依赖mybatis-plus-boot-starter对应，mybatis-plus依赖包则是mybatis.mapper-locations
mybatis-plus:
  mapper-locations: classpath:mapper/*.xml